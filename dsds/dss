// let products = [
//     { id: '1', title: 'Hearing aid', price: 120 },
//     { id: '2', title: 'Fitness watch tracker', price: 200 }
//   ];
//   export const getAllProducts = (req, res) => {
//     try {
//       res.status(200).json({
//         message: 'All products are returned',
//         payload: products,
//       });
//     } catch (error) {
//       res.status(500).json({
//         message: error.message,
//       });
//     }
//   };
  
//   export const getSingleProduct = (req, res, next) => {
//     try {
//       const id = req.params.id;
//       const product = products.find(product => product.id === id);
//       if (!product) {
//         const error = new Error(`Product is not found with this id ${id}`);
//         error.status = 404;
//         throw error;
//       }
//       res.status(200).json({
//         message: 'Single product is returned',
//         payload: product,
//       });
//     } catch (error) {
//       next(error);
//     }
//   };
  
//   export const deleteSingleProduct = (req, res, next) => {
//     try {
//       const id = req.params.id;
//       const product = products.find(product => product.id === id);
//       if (!product) {
//         const error = new Error(`Product is not found with this id ${id}`);
//         error.status = 404;
//         throw error;
//       }
//       const filteredProducts = products.filter(product => product.id !== id);
//       products = filteredProducts; 
//       res.status(200).json({
//         message: 'Product deleted successfully',
//       });
//     } catch (error) {
//       next(error);
//     }
//   };
  

// import express from 'express'
// const router = express.Router()
// import Product from '../models/product'
// import Order from '../models/order'
// import ApiError from '../errors/ApiError'
// import React, { useState , useEffect} from 'react';
// import axios from 'axios'


// const App = () => {
//   const [products, setProducts] = useState([]);

//   const fetchProducts = async () => {
//     try {
//       const response = await axios.get('http://localhost:3002/products');
//       setProducts(response.data);
//     } catch (error) {
//       console.error('Error fetching products:', error);
//     }
//   };

//   const handleDelete = async (id: number) => {
//     try {
//       await axios.delete(`http://localhost:3002/products/${id}`);
//       fetchProducts();
//     } catch (error) {
//       console.error(`Error deleting product with id ${id}:`, error);
//     }
//   };

//   useEffect(() => {
//     fetchProducts();
//   }, []); // Empty dependency array means this effect will run once on mount

// router.get('/', async (_, res) => {
//   const products = await Product.find()
//   console.log('products:', products)
//   res.json(products)
// })

// router.post('/', async (req, res, next) => {
//   const { name, description, quantity } = req.body

//   if (!name || !description) {
//     next(ApiError.badRequest('Name and Description are requried'))
//     return
//   }
//   const product = new Product({
//     name,
//     description,
//     quantity,
//   })

//   await product.save()
//   res.json(product)
// })

// export default router